<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Sane</title>
  <subtitle>不积跬步无以至千里</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://localhost:4000/"/>
  <updated>2016-03-14T15:24:36.000Z</updated>
  <id>http://localhost:4000/</id>
  
  <author>
    <name>Sane Chen</name>
    <email>wwwcjf163@163.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>理解Node模块(Node Modules)</title>
    <link href="http://localhost:4000/2016/03/14/%E7%90%86%E8%A7%A3Modules/"/>
    <id>http://localhost:4000/2016/03/14/理解Modules/</id>
    <published>2016-03-14T14:36:55.000Z</published>
    <updated>2016-03-14T15:24:36.000Z</updated>
    
    <content type="html">&lt;p&gt;由于历史原因JavaScript对浏览器端的应用定义了APIs，但是没有为很多其他的应用定义一个标准库，所以后来的开发者弄出了CommonJS API以填补这个坑。使用CommonJS，人们就能做一下事情：&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;服务端的JS应用&lt;/li&gt;
&lt;li&gt;命令行工具&lt;/li&gt;
&lt;li&gt;桌面GUI应用&lt;/li&gt;
&lt;li&gt;混合程序（Titanium, Adobe AIR）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CommonJS定义了常用模块的格式，Node也继承了CommonJS的标准。&lt;/p&gt;
&lt;p&gt;CommonJS模块标准参见：&lt;a href=&quot;http://wiki.commonjs.org/wiki/Modules/1.1.1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://wiki.commonjs.org/wiki/Modules/1.1.1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;那么Node Modules怎么使用呢？&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Node中的每一个文件是它自身的模块（module）；
module的变量作用域是当前的module所在的文件 ；
module.exports定义了当前module的输出 ；
使用require函数以引入module ；
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;举个栗子吧：&lt;br&gt;新建一个文件名为rectangle.js:&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	perimeter: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;x,y&lt;/span&gt;) &lt;/span&gt;&amp;#123; &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;*(x+y)); &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	area: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;x,y&lt;/span&gt;) &lt;/span&gt;&amp;#123; &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ( x*y) )); &amp;#125; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后在同级目录下，建立另一个文件solveRect.js,这就实现了引入模块&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; rect = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(‘./rectangle’);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;当然还有另一种直接的方式输出：&lt;br&gt;&lt;figure class=&quot;highlight actionscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;exports.perimeter = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(x, y)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;*(x+y)); &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;exports.area = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(x, y)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (x*y); &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;实际上，Node.js的modules分为三类&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自定义的module&lt;/li&gt;
&lt;li&gt;核心模块：比如path,fs,os,util&lt;/li&gt;
&lt;li&gt;第三方模块：通过NPM安装后存在于node_modules的文件夹内&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这三类模块的使用方法也差不多：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;自定义的：require(&amp;apos;./module_name&amp;apos;)
核心和第三方模块：require(&amp;apos;module_name&amp;apos;)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Node寻找第三方模块的顺序是依次从当前目录的./node_modules找，接着找上一级目录的../node_modules，一直找到最上层目录，直到找到为止&lt;/p&gt;
&lt;p&gt;对于一个Node模块来说，我们可查看他的package.json文件来了解它包含的信息：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;版本version：依次是&amp;lt;MajorVersion&amp;gt;.&amp;lt;MinorVersion&amp;gt;.&amp;lt;Patch&amp;gt;
使用npm安装特定包的版本有三种方式：
    精确匹配只兼容这一个版本：npm install express@4.0.0
    只兼容补丁包(Patch)：npm install express@&amp;quot;~4.0.0&amp;quot;
    可兼容小版本：npm install express@&amp;quot;^4.0.0&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;版本依赖&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install express --save
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;当你安装的时候带上了 –save ,npm会自动在你命令所在目录里找到 package.json 文件,并追加到依赖配置最后一样。&lt;br&gt;当不加任何版本安装时,默认追加方式是这样的:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;quot;express&amp;quot;: &amp;quot;^4.0.0&amp;quot;
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;由于历史原因JavaScript对浏览器端的应用定义了APIs，但是没有为很多其他的应用定义一个标准库，所以后来的开发者弄出了CommonJS API以填补这个坑。使用CommonJS，人们就能做一下事情：&lt;br&gt;
    
    </summary>
    
      <category term="blog" scheme="http://localhost:4000/categories/blog/"/>
    
    
      <category term="Node Modules" scheme="http://localhost:4000/tags/Node-Modules/"/>
    
      <category term="Node.js" scheme="http://localhost:4000/tags/Node-js/"/>
    
      <category term="Node模块" scheme="http://localhost:4000/tags/Node%E6%A8%A1%E5%9D%97/"/>
    
  </entry>
  
  <entry>
    <title>Node函数回调和错误处理(Callbacks,Error Handling)</title>
    <link href="http://localhost:4000/2016/03/14/Node%E5%87%BD%E6%95%B0%E5%9B%9E%E8%B0%83%E5%92%8C%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/"/>
    <id>http://localhost:4000/2016/03/14/Node函数回调和错误处理/</id>
    <published>2016-03-14T14:36:55.000Z</published>
    <updated>2016-03-14T16:20:04.000Z</updated>
    
    <content type="html">&lt;p&gt;当我们谈论JavaScript的时候，有两个显著的概念需要说明，我么在使用JavaScript的时候经常忽略这两个概念。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;* 函数是一等公民(First-class functions):函数就像其他变量一样
* Closures：
    - 内部函数能获取所在的外部函数的全部变量
    - 即使外部函数已经运行结束了，内部函数依然能获取外部函数的变量，回调函数就是一个例子
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在继续讨论回调之前，我们先了解一下异步调用：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;async_pic@2x.png&quot; alt=&quot;Async Picture&quot; title=&quot;Async Picture&quot;&gt;&lt;/p&gt;
&lt;p&gt;同步调用容易阻塞进程，而异步就不会了。我们可以把Long Running的计算或者I/O操作交给回调函数去做。&lt;/p&gt;
&lt;p&gt;异步I/O和回调又是如何实现的？&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;async_io_pic@2x.png&quot; alt=&quot;Async_IO Picture&quot; title=&quot;Async IO Picture&quot;&gt;&lt;/p&gt;
&lt;p&gt;在Node环境中，有一个单线程的事件池（Event Loop），它不停地接收左边的requests，如果request包含I/O，那么它会交给一个回调函数，等输入结束之后回调函数再去处理I/)。&lt;/p&gt;
&lt;p&gt;举个栗子：&lt;br&gt;新建一个文件rectangle-1.js&lt;/p&gt;
&lt;figure class=&quot;highlight haxe&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;module.exports = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(x,y,callback)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (x &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; || y &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Error(&lt;span class=&quot;string&quot;&gt;&quot;Rectangle dimensions should be greater than zero: l = &quot;&lt;/span&gt; + x + &lt;span class=&quot;string&quot;&gt;&quot;, and b = &quot;&lt;/span&gt; + y); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;callback&lt;/span&gt;(&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				perimeter: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123; &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;*(x+y)); &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				area:&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123; &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (x*y); &amp;#125; &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt;(error)&amp;#123;&lt;span class=&quot;keyword&quot;&gt;callback&lt;/span&gt;(error,&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;); &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Node的惯例是回调函数的第一个参数一般是error。&lt;/p&gt;
&lt;p&gt;然后再建立一个文件solveRect-1.js&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; rect = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;./rectangle-1&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;solveRect&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;l,b&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;Solving for rect with l=%d, b=%d&quot;&lt;/span&gt;,l,b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	rect(l,b,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err,rect&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;perimeter=&quot;&lt;/span&gt;+rect.perimeter());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;area=&quot;&lt;/span&gt;+rect.area());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;);	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;solveRect(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;solveRect(-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;当我们谈论JavaScript的时候，有两个显著的概念需要说明，我么在使用JavaScript的时候经常忽略这两个概念。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;* 函数是一等公民(First-class functions):函数就像其他变量一样
* Closures：
    -
    
    </summary>
    
      <category term="blog" scheme="http://localhost:4000/categories/blog/"/>
    
    
      <category term="Node.js" scheme="http://localhost:4000/tags/Node-js/"/>
    
      <category term="callbacks" scheme="http://localhost:4000/tags/callbacks/"/>
    
      <category term="error handling" scheme="http://localhost:4000/tags/error-handling/"/>
    
  </entry>
  
  <entry>
    <title>Meteor自动表单和路由</title>
    <link href="http://localhost:4000/2016/02/23/Meteor%E8%87%AA%E5%8A%A8%E8%A1%A8%E5%8D%95%E5%92%8C%E8%B7%AF%E7%94%B1/"/>
    <id>http://localhost:4000/2016/02/23/Meteor自动表单和路由/</id>
    <published>2016-02-23T12:37:24.000Z</published>
    <updated>2016-02-23T14:43:19.000Z</updated>
    
    <content type="html">&lt;p&gt;本节结束，你能学会&lt;br&gt;    使用Meteor文件夹组织文件&lt;br&gt;    组织不同的模板文件&lt;br&gt;    使用iron:router包建立多页面应用&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;在Meteor中，我们常常用到server-client-shared-lib-public这几个文件夹。&quot;&gt;&lt;a href=&quot;#在Meteor中，我们常常用到server-client-shared-lib-public这几个文件夹。&quot; class=&quot;headerlink&quot; title=&quot;在Meteor中，我们常常用到server,client,shared,lib,public这几个文件夹。&quot;&gt;&lt;/a&gt;在Meteor中，我们常常用到server,client,shared,lib,public这几个文件夹。&lt;/h5&gt;&lt;p&gt;  server文件夹里面一般放入Meteor.isServer的文件，也就是只有server能看到的文件&lt;/p&gt;
&lt;p&gt;  client文件夹放入.js .html .css文件，因为只有浏览器端需要这些文件，server是不需要的&lt;/p&gt;
&lt;p&gt;  shared文件夹一般放入client和server共同需要知道的方法，比如Meteor.methods()&lt;/p&gt;
&lt;p&gt;  lib文件夹同样也是client和server都可调用的，只是它在程序一开始就执行，一般我们把数据库初始化放在这里。&lt;/p&gt;
&lt;p&gt;template文件不一定要放在一起，只要在client文件夹里面就可以了，因为在运行的时候，Meteor会自动把这些模板组织到一起&lt;/p&gt;
&lt;p&gt;最后，讲下iron:router, 在github上的官方文档：&lt;a href=&quot;https://github.com/eventedmind/iron-router&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/eventedmind/iron-router&lt;/a&gt;&lt;br&gt;首先安装这个包&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;meteor add iron:router
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;运行下，我们能看到&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Router.route(&lt;span class=&quot;string&quot;&gt;&#39;/&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.render(&lt;span class=&quot;string&quot;&gt;&#39;Home&#39;&lt;/span&gt;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    data: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123; &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; Items.findOne(&amp;#123;_id: &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.params._id&amp;#125;); &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;按照上面的实例，我们就能够一个个地配置页面。但是现实的情况是有很多的页面需要配置，并且我们要在不同的页面之间切换，可以考虑下面的方法：&lt;br&gt;首先在client下面建立一个模板文件main.html&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;ApplicationLayout&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;textCircle&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&amp;#123;&amp;gt; yield &quot;header&quot;&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&amp;#123;&amp;gt; yield &quot;main&quot;&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;template&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里有yield，它和我们看到的普通模板一样，实际上也是一个模板文件，能加载后面参数提供的模板。&lt;br&gt;然后，我们在client文件夹下面的main.js中写入router：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Router.configure(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  layoutTemplate:&lt;span class=&quot;string&quot;&gt;&#39;ApplicationLayout&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Router.route(&lt;span class=&quot;string&quot;&gt;&#39;/&#39;&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;you hit /&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.render(&lt;span class=&quot;string&quot;&gt;&quot;navbar&quot;&lt;/span&gt;, &amp;#123;to:&lt;span class=&quot;string&quot;&gt;&quot;header&quot;&lt;/span&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.render(&lt;span class=&quot;string&quot;&gt;&quot;docList&quot;&lt;/span&gt;, &amp;#123;to:&lt;span class=&quot;string&quot;&gt;&quot;main&quot;&lt;/span&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Router.route(&lt;span class=&quot;string&quot;&gt;&#39;/documents/:_id&#39;&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;you hit /&quot;&lt;/span&gt;+&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.params._id);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Session.set(&lt;span class=&quot;string&quot;&gt;&quot;docid&quot;&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.params._id)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.render(&lt;span class=&quot;string&quot;&gt;&quot;navbar&quot;&lt;/span&gt;, &amp;#123;to:&lt;span class=&quot;string&quot;&gt;&quot;header&quot;&lt;/span&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.render(&lt;span class=&quot;string&quot;&gt;&quot;docItem&quot;&lt;/span&gt;, &amp;#123;to:&lt;span class=&quot;string&quot;&gt;&quot;main&quot;&lt;/span&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样就有了两个页面，文中的navbar，docList，docItem是自己建立的模板。这两个路由分别会渲染ApplicationLayout中的两个模板。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本节结束，你能学会&lt;br&gt;    使用Meteor文件夹组织文件&lt;br&gt;    组织不同的模板文件&lt;br&gt;    使用iron:router包建立多页面应用&lt;br&gt;
    
    </summary>
    
      <category term="Meteor" scheme="http://localhost:4000/categories/Meteor/"/>
    
    
      <category term="Meteor" scheme="http://localhost:4000/tags/Meteor/"/>
    
      <category term="router" scheme="http://localhost:4000/tags/router/"/>
    
  </entry>
  
  <entry>
    <title>Tranquilpeak设置问题</title>
    <link href="http://localhost:4000/2016/02/23/Tranquilpeak%E8%AE%BE%E7%BD%AE%E9%97%AE%E9%A2%98/"/>
    <id>http://localhost:4000/2016/02/23/Tranquilpeak设置问题/</id>
    <published>2016-02-23T09:37:24.000Z</published>
    <updated>2016-02-23T16:56:12.000Z</updated>
    
    <content type="html">&lt;p&gt;CoverImage：&lt;br&gt;在较小屏幕尺寸时，右侧会显示coverImage的一个很小的竖条，问题产生的原因是cover的css左侧位置与navbar的左侧起始位置不同，导致他们虽然width相同，但依然不会对齐。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;解决方法是：在设置actions.ejs时，我删除了&lt;strong&gt;post-actions post-action-share&lt;/strong&gt;的第一行，并且如果最后一个btn有data-tooltip就会出错。&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;post-action hide-lg hide-md hide-sm&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;post-action-btn btn btn--default btn-open-shareoptions&quot;&lt;/span&gt;  &lt;span class=&quot;attribute&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;#btn-open-shareoptions&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;fa fa-share-alt&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;yy&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;i&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;因为这一行控制的是xs屏幕时会显示出fa-share-alt形状的分享按钮，删除之后会导致不cover的尺寸变大！保留即可。同时隐藏一个按钮，将类改为&lt;br&gt;&lt;figure class=&quot;highlight erb&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;post-action&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;post-action&quot;&lt;/span&gt;  &lt;span class=&quot;attribute&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&amp;lt;%=&lt;span class=&quot;ruby&quot;&gt; &lt;span class=&quot;string&quot;&gt;&#39;http://www.jiathis.com/send/?webid=qzone&amp;amp;appkey=&amp;amp;uid=2084798&amp;amp;url=&#39;&lt;/span&gt; + post.permalink + &lt;span class=&quot;string&quot;&gt;&#39;&amp;amp;title=&#39;&lt;/span&gt; + post.title &lt;/span&gt;%&amp;gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&lt;span class=&quot;value&quot;&gt;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在小尺寸的时候，我们想修改下拉的分享按钮，比如加入share_on_weixin按钮,只需要找到language文件夹，在zh-cn里面加入&lt;br&gt;    share_on_weixin: “分享到朋友圈”,因为global控制的属性都在language文件夹里面。&lt;/p&gt;
&lt;figure class=&quot;highlight erb&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;share-option&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;share-option-btn&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;target&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;new&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&amp;lt;%=&lt;span class=&quot;ruby&quot;&gt; &lt;span class=&quot;string&quot;&gt;&#39;https://plus.google.com/share?url=&#39;&lt;/span&gt; + post.permalink &lt;/span&gt;%&amp;gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&lt;span class=&quot;value&quot;&gt;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;fa fa-google-plus&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;i&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&amp;lt;%=&lt;span class=&quot;ruby&quot;&gt; _&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;global.share_on_google_plus&#39;&lt;/span&gt;) &lt;/span&gt;%&amp;gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;CoverImage：&lt;br&gt;在较小屏幕尺寸时，右侧会显示coverImage的一个很小的竖条，问题产生的原因是cover的css左侧位置与navbar的左侧起始位置不同，导致他们虽然width相同，但依然不会对齐。&lt;br&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://localhost:4000/categories/hexo/"/>
    
    
      <category term="Tranquilpeak" scheme="http://localhost:4000/tags/Tranquilpeak/"/>
    
      <category term="coverImage" scheme="http://localhost:4000/tags/coverImage/"/>
    
      <category term="hexo" scheme="http://localhost:4000/tags/hexo/"/>
    
      <category term="分享按钮" scheme="http://localhost:4000/tags/%E5%88%86%E4%BA%AB%E6%8C%89%E9%92%AE/"/>
    
  </entry>
  
  <entry>
    <title>谷歌的AlphaGo真的理解它的算法吗</title>
    <link href="http://localhost:4000/2016/02/01/AlphaGo/"/>
    <id>http://localhost:4000/2016/02/01/AlphaGo/</id>
    <published>2016-02-01T08:04:34.000Z</published>
    <updated>2016-02-23T13:37:23.000Z</updated>
    
    <content type="html">&lt;p&gt;上周，被谷歌收购的人工智能公司Deepmind的研究人员，宣布了一项超凡的突破：去年10月，它的Deepmind计算系统——AlphaGo以5：0横扫欧洲围棋冠军。上周Nature杂志，发布了这个胜利。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;戳此：&lt;a href=&quot;https://www.theguardian.com/commentisfree/2016/jan/31/google-alphago-deepmind-artificial-intelligence-intuititive/amp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;阅读英文原文&lt;/a&gt;&lt;br&gt;翻译：Sane&lt;/p&gt;
&lt;p&gt;这没啥？计算机很久以前在棋类游戏上就已经越来越擅长了。比如，早在1997年，IBM的深蓝就打败了当时的国际象棋冠军Garry Kasparov，那么使用黑白子而不是六个不同棋子的围棋会不会轻而易举？事实不是这样的：围棋中可能的走法远远超过了宇宙中的原子数量和国际象棋中可能的走法。&lt;/p&gt;
&lt;p&gt;类似深蓝这样的游戏程序是通过构建「搜索树」运行的。如果在围棋中也想这样干，计算时间没有十亿也得有百万年。DeepMind的方法把树形搜索（由谷歌强大的云计算能力支持）和深度神经网络结合起来，它通过例子和经验（就像人类大脑），加强不同模拟神经元层之间的连接。&lt;/p&gt;
&lt;p&gt;AlphaGo首先研究了围棋专家对局的3000万种走法，消化棋盘上的走法，然后使用「增强学习」技术，通过50多个电脑和自己对局，随着每次迭代都会提高自己。这是之前一位Deepmind专家开发的，这种神经网络仅仅通过观看屏幕上真实游戏的回放，不涉及任何程序，自己训练自己玩电脑游戏，就能达到专家级水准，&lt;/p&gt;
&lt;p&gt;最值得关注的是，AlphaGo自己甚至是它的缔造者都不理解它的工作方式，但却能很专业地玩高难度游戏。它展示了一种我们称之为意识的恐怖能力——「不用有意识的推论就获取知识」。到目前，我们认为意识是人类独有的能力。这就像牛顿在他的第二版定律中写到的：「不杜撰假设，我不做假设，我就是知道」。&lt;/p&gt;
&lt;p&gt;但是如果AlphaGo确实表明机器有意识，那么这成就无疑就像跨越了卢比孔河。意识是一种不确定的想法，直到现在我们认为只有人类具有。由于牛顿是个天才，我们打算相信他说的，就像母亲直觉相信认为自己的孩子做错了或者有疑心的人直觉怀疑某个人是否在讲真话。&lt;/p&gt;
&lt;p&gt;「意识可能是错的，所以我们需要证据…具备第六感].&lt;/p&gt;
&lt;p&gt;问题是意识可能——并且通常是——错的，因此我们要求有理有据支持它，因此我们怀疑未来的事。目前来说，对机器意识的担忧毫无意义：AlphaGo不能解释围棋中意识的原理并不重要。但是如果Demis Hassabis，Deepmind的合伙人有办法实现，这就不会持续很久。他上周在博客中写道，「尽管游戏是迅速有效地开发和测试AI算法的完美平台，但最终我们想在更重要的真实世界中使用这些技术。因为我们使用的方法是通用的，我们也希望能拓展开来，以帮助解决气候模化和复杂疾病分析等社会最艰巨、最紧迫的问题。&lt;/p&gt;
&lt;p&gt;一方面，Hassabis认为创造人工智能技术的人应承担这些责任，他呼吁「对人工智能发展的伦理问题进行一次责任的讨论」。另一方面，在去年9月剑桥的一次演讲中，一位提问者问及谷歌建立伦理委员会监督其公司的研究时，他试图搪塞的回答引起了一部分观众席的唏嘘。&lt;/p&gt;
&lt;p&gt;正如这个领域大多数人一样，Hassabis认为AI离强大到对种族和生存构成威胁还很远，然而，这与其公司正做出卓著的进展恰恰相反。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;上周，被谷歌收购的人工智能公司Deepmind的研究人员，宣布了一项超凡的突破：去年10月，它的Deepmind计算系统——AlphaGo以5：0横扫欧洲围棋冠军。上周Nature杂志，发布了这个胜利。&lt;br&gt;
    
    </summary>
    
      <category term="blog" scheme="http://localhost:4000/categories/blog/"/>
    
    
      <category term="AI，观点" scheme="http://localhost:4000/tags/AI%EF%BC%8C%E8%A7%82%E7%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>麦肯锡方法</title>
    <link href="http://localhost:4000/2016/01/05/%E9%BA%A6%E8%82%AF%E9%94%A1%E6%96%B9%E6%B3%95/"/>
    <id>http://localhost:4000/2016/01/05/麦肯锡方法/</id>
    <published>2016-01-05T14:43:34.000Z</published>
    <updated>2016-02-22T08:12:41.000Z</updated>
    
    <content type="html">&lt;!-- excerpt --&gt;&lt;/p&gt;
&lt;h1 id=&quot;麦肯锡方法&quot;&gt;&lt;a href=&quot;#麦肯锡方法&quot; class=&quot;headerlink&quot; title=&quot;麦肯锡方法&quot;&gt;&lt;/a&gt;麦肯锡方法&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;以事实为依据
系统化的
大胆假设，小心求证
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;思考问题的方法：&quot;&gt;&lt;a href=&quot;#思考问题的方法：&quot; class=&quot;headerlink&quot; title=&quot;思考问题的方法：&quot;&gt;&lt;/a&gt;思考问题的方法：&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;建立解决方案：
    与事实为友；
    MECEMECE
    直奔问题——初始假设


探索分析：
    透过现象看本质；
    二八法则
    关键驱动因素，学会忽略
    电梯法则
    大局为重，不要在意细枝末节
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;解决问题的方法：&quot;&gt;&lt;a href=&quot;#解决问题的方法：&quot; class=&quot;headerlink&quot; title=&quot;解决问题的方法：&quot;&gt;&lt;/a&gt;解决问题的方法：&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;拓展客户：
    功夫在诗外，合适的时间出现
    谨慎承诺
组建团队
层级指挥链
进行研究：
    寻找异常
展开访谈：
    多倾听，少引导
    切勿问的太多
    回马枪
    棘手的请上司
    感谢信
头脑风暴：
    没有坏点子
    没有不值得回答的问题
    适可而止
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;麦肯锡推介问题的方法：&quot;&gt;&lt;a href=&quot;#麦肯锡推介问题的方法：&quot; class=&quot;headerlink&quot; title=&quot;麦肯锡推介问题的方法：&quot;&gt;&lt;/a&gt;麦肯锡推介问题的方法：&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;未雨绸缪，事先沟通
黑白，一图一事，二维图
公司内部沟通：
    简洁
    全面
    系统
与客户合作：
    合作
    全面支持
    详细规划，严谨实施，严格进度
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;麦肯锡的生存之道：&quot;&gt;&lt;a href=&quot;#麦肯锡的生存之道：&quot; class=&quot;headerlink&quot; title=&quot;麦肯锡的生存之道：&quot;&gt;&lt;/a&gt;麦肯锡的生存之道：&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;导师
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;麦肯锡式招聘：&quot;&gt;&lt;a href=&quot;#麦肯锡式招聘：&quot; class=&quot;headerlink&quot; title=&quot;麦肯锡式招聘：&quot;&gt;&lt;/a&gt;麦肯锡式招聘：&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;重视
分析力与性格
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;以事实为依据&lt;br&gt;系统化的&lt;br&gt;大胆假设，小心求证&lt;br&gt;
    
    </summary>
    
      <category term="blog" scheme="http://localhost:4000/categories/blog/"/>
    
    
      <category term="读书，麦肯锡方法" scheme="http://localhost:4000/tags/%E8%AF%BB%E4%B9%A6%EF%BC%8C%E9%BA%A6%E8%82%AF%E9%94%A1%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>创业的坑</title>
    <link href="http://localhost:4000/2015/12/20/%E5%88%9B%E4%B8%9A%E7%9A%84%E5%9D%91/"/>
    <id>http://localhost:4000/2015/12/20/创业的坑/</id>
    <published>2015-12-20T01:32:06.000Z</published>
    <updated>2015-12-27T02:50:03.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
      <category term="blog" scheme="http://localhost:4000/categories/blog/"/>
    
    
      <category term="创业，坑" scheme="http://localhost:4000/tags/%E5%88%9B%E4%B8%9A%EF%BC%8C%E5%9D%91/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://localhost:4000/2015/12/01/hello-world/"/>
    <id>http://localhost:4000/2015/12/01/hello-world/</id>
    <published>2015-12-01T08:04:34.000Z</published>
    <updated>2016-02-23T09:35:16.000Z</updated>
    
    <content type="html">&lt;p&gt;Welcome to &lt;a href=&quot;http://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;http://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;http://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;http://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;http://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;http://hexo.io/docs/generating.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Deploy-to-remote-sites&quot;&gt;&lt;a href=&quot;#Deploy-to-remote-sites&quot; class=&quot;headerlink&quot; title=&quot;Deploy to remote sites&quot;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;http://hexo.io/docs/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;http://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;http://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;http://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
